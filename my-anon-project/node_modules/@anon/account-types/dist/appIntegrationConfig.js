import { z } from "zod";
export const StorageTypeSchema = z.enum(["local", "session", "cookie"]);
export const BaseIndicatorSchema = z.object({
    key: z.string(),
});
export const LocalOrSessionIndicatorSchema = BaseIndicatorSchema.merge(z.object({
    storage: z.enum(["local", "session"]),
}));
export const CookieIndicatorSchema = BaseIndicatorSchema.merge(z.object({
    storage: z.literal("cookie"),
    domains: z.array(z.string()),
    validator: z
        .object({
        kind: z.literal("jwt_claim"),
        value: z.string(),
    })
        .optional(),
}));
export const SessionCompletionIndicatorSchema = LocalOrSessionIndicatorSchema.or(CookieIndicatorSchema);
// Defines the rule for matching the validation criteria.
export var WebValidationMatchRule;
(function (WebValidationMatchRule) {
    WebValidationMatchRule["ALL"] = "ALL";
    WebValidationMatchRule["ANY"] = "ANY";
})(WebValidationMatchRule || (WebValidationMatchRule = {}));
