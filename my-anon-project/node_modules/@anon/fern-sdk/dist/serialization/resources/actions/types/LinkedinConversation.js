"use strict";
/**
 * This file was auto-generated by Fern from our API Definition.
 */
var __createBinding =
  (this && this.__createBinding) ||
  (Object.create
    ? function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (
          !desc ||
          ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)
        ) {
          desc = {
            enumerable: true,
            get: function () {
              return m[k];
            },
          };
        }
        Object.defineProperty(o, k2, desc);
      }
    : function (o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
      });
var __setModuleDefault =
  (this && this.__setModuleDefault) ||
  (Object.create
    ? function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
      }
    : function (o, v) {
        o["default"] = v;
      });
var __importStar =
  (this && this.__importStar) ||
  function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null)
      for (var k in mod)
        if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
          __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
  };
Object.defineProperty(exports, "__esModule", { value: true });
exports.LinkedinConversation = void 0;
const core = __importStar(require("../../../../core"));
const Message_1 = require("./Message");
const ConversationType_1 = require("./ConversationType");
const MutedUntil_1 = require("./MutedUntil");
const ReadOnlyStatus_1 = require("./ReadOnlyStatus");
const FolderType_1 = require("./FolderType");
const ContentType_1 = require("./ContentType");
const ChatProfile_1 = require("./ChatProfile");
exports.LinkedinConversation = core.serialization.object({
  messages: core.serialization.list(Message_1.Message),
  id: core.serialization.string(),
  type: ConversationType_1.ConversationType,
  profileId: core.serialization.string().optional(),
  timestamp: core.serialization.string().optional(),
  unreadCount: core.serialization.number(),
  archived: core.serialization.boolean(),
  mutedUntil: MutedUntil_1.MutedUntil.optional(),
  readOnly: ReadOnlyStatus_1.ReadOnlyStatus,
  subject: core.serialization.string().optional(),
  folder: core.serialization.list(FolderType_1.FolderType).optional(),
  organizationId: core.serialization.string().optional(),
  mailboxId: core.serialization.string().optional(),
  contentType: ContentType_1.ContentType.optional(),
  profiles: core.serialization.list(ChatProfile_1.ChatProfile),
});
