/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as AnonApi from "../../../index";
export declare namespace AppIntegrations {
  interface Options {
    environment?: core.Supplier<environments.AnonApiEnvironment | string>;
    token: core.Supplier<core.BearerToken>;
    /** Override the X-Anon-Sdk-Client-Id header */
    anonSdkClientId: core.Supplier<string>;
  }
  interface RequestOptions {
    /** The maximum time to wait for a response in seconds. */
    timeoutInSeconds?: number;
    /** The number of times to retry the request. Defaults to 2. */
    maxRetries?: number;
    /** A hook to abort the request. */
    abortSignal?: AbortSignal;
    /** Override the X-Anon-Sdk-Client-Id header */
    anonSdkClientId?: string;
  }
}
export declare class AppIntegrations {
  protected readonly _options: AppIntegrations.Options;
  constructor(_options: AppIntegrations.Options);
  /**
   * List all currently supported app integrations
   *
   * @param {AppIntegrations.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.appIntegrations.listAppIntegrations()
   */
  listAppIntegrations(
    requestOptions?: AppIntegrations.RequestOptions,
  ): Promise<AnonApi.ListAppIntegrationsResponse>;
  protected _getAuthorizationHeader(): Promise<string>;
}
