/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as AnonApi from "../../../../index";
/**
 * @example
 *     {
 *         app: "string",
 *         appUserId: "string",
 *         appUserIdToken: "string",
 *         chromeExtensionId: "string",
 *         clientId: "string",
 *         companyLogoUrl: "string",
 *         companyName: "string",
 *         redirectUrl: "string",
 *         state: "string",
 *         authUrl: "string",
 *         checkUrl: "string",
 *         displayName: "string",
 *         iconUrl: "string"
 *     }
 */
export interface CreateLinkUrlRequest {
  /**
   * See [supported integrations](/docs/link/integrations-table) for list of accepted values. Otherwise, you can create a new custom integration by additionally supplying an `authUrl`, as well as optionally a `displayName`, `iconUrl`, and `checkUrl`.
   */
  app: AnonApi.App;
  /**
   * Any unique user ID e.g. `user-123-xyz`. Not required if `appUserIdToken` is present.
   */
  appUserId: string;
  /**
   * [Create one](/reference/api/appuseridtoken/issue-a-new-appuseridtoken) or use an ID token from your [existing identity provider](/docs/link/customization/self-hosted-user-pools). This is an OIDC JWT token. The `sub` claim of the token will be used as the `appUserId`.
   */
  appUserIdToken?: string;
  /**
   * Defaults to [Anon's chrome extension](https://chromewebstore.google.com/detail/anon-link/lbgbplnejdpahnfmnphghjlbedpjjbgd?pli=1) ID `lbgbplnejdpahnfmnphghjlbedpjjbgd`. Set this parameter when using [your own chrome extension](/docs/link/customization/chrome-extension).
   */
  chromeExtensionId?: string;
  /**
   * Required when setting `appUserIdToken` to an ID token from your [existing identity provider](/docs/link/customization/self-hosted-user-pools). This is the ID of an `SdkClient`.
   */
  clientId?: string;
  /**
   * A URL to the company logo. This will be displayed in the Anon Link UI. Defaults to your organization's logo URL if set.
   */
  companyLogoUrl?: string;
  /**
   * The name of your company or application. This will be displayed in the Anon Link UI. Defaults to the name of your organization
   */
  companyName?: string;
  /**
   * Any valid url e.g. `http://localhost:3000/redirect`. This is the url the user will be redirected to after linking an account.
   */
  redirectUrl: string;
  /**
   * Any valid JSON string e.g. `{"key":"value"}`. Defaults to `{}`. This value will be included as a query parameter sent to the specified `redirectUrl`.
   */
  state?: string;
  /**
   * If you are creating a custom integration, set this to the URL of the integration's login page.
   */
  authUrl?: string;
  /**
   * If you are creating a custom integration, set this to a page that can be used to determine whether a user is logged in, such as the user profile page. If not specified, this defaults to the `authUrl`, which works in many cases.
   */
  checkUrl?: string;
  /**
   * If you are creating a custom integration, set this to the name of the integration as it should appear to the end user.
   */
  displayName?: string;
  /**
   * If you are creating a custom integration, set this to the url of an icon representing the integration to show to the end user.
   */
  iconUrl?: string;
}
