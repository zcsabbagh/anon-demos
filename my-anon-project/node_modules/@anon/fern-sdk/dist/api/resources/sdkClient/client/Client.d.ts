/**
 * This file was auto-generated by Fern from our API Definition.
 */
import * as environments from "../../../../environments";
import * as core from "../../../../core";
import * as AnonApi from "../../../index";
export declare namespace SdkClient {
  interface Options {
    environment?: core.Supplier<environments.AnonApiEnvironment | string>;
    token: core.Supplier<core.BearerToken>;
    /** Override the X-Anon-Sdk-Client-Id header */
    anonSdkClientId: core.Supplier<string>;
  }
  interface RequestOptions {
    /** The maximum time to wait for a response in seconds. */
    timeoutInSeconds?: number;
    /** The number of times to retry the request. Defaults to 2. */
    maxRetries?: number;
    /** A hook to abort the request. */
    abortSignal?: AbortSignal;
    /** Override the X-Anon-Sdk-Client-Id header */
    anonSdkClientId?: string;
  }
}
export declare class SdkClient {
  protected readonly _options: SdkClient.Options;
  constructor(_options: SdkClient.Options);
  /**
   * This endpoint creates a new `SdkClient`.
   *
   * @param {AnonApi.CreateSdkClient} request
   * @param {SdkClient.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.sdkClient.createSdkClient({
   *         name: "string",
   *         kind: "service",
   *         description: "string",
   *         oauthDisabled: true
   *     })
   */
  createSdkClient(
    request: AnonApi.CreateSdkClient,
    requestOptions?: SdkClient.RequestOptions,
  ): Promise<AnonApi.SdkClient>;
  /**
   * This endpoint looks up an existing `SdkClient`.
   *
   * @param {string} sdkClientId - ID of the SdkClient.
   * @param {AnonApi.GetSdkClientRequest} request
   * @param {SdkClient.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.sdkClient.getSdkClient("string", {
   *         xForwardedUserId: "string",
   *         xForwardedOrganizationId: "string"
   *     })
   */
  getSdkClient(
    sdkClientId: string,
    request?: AnonApi.GetSdkClientRequest,
    requestOptions?: SdkClient.RequestOptions,
  ): Promise<AnonApi.SdkClient>;
  /**
   * Lists all `SdkClients` in your organization.
   *
   * @param {SdkClient.RequestOptions} requestOptions - Request-specific configuration.
   *
   * @example
   *     await client.sdkClient.listSdkClients()
   */
  listSdkClients(
    requestOptions?: SdkClient.RequestOptions,
  ): Promise<AnonApi.SdkClientList>;
  protected _getAuthorizationHeader(): Promise<string>;
}
