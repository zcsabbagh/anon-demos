import { Page } from "playwright";
import { NetworkHelper } from "../networkHelper.js";
/**
 * Represents the information of an Amazon order.
 */
export type OrderInfo = {
    productName: string;
    status: string;
    totalPrice: string;
    orderDate: string;
    shippedToName: string;
    shippedToAddress: string;
};
/**
 * Automates the process of adding AirPods to the cart on Amazon.
 *
 * @param networkHelper - Helper object for network-related operations
 * @returns A function that takes a Playwright Page object that is on the home page of Amazon and performs the automation
 */
export declare const demoAddHeadphonesToCart: (networkHelper: NetworkHelper) => (page: Page) => Promise<void>;
/**
 * Retrieves all orders from the Amazon account.
 *
 * @param networkHelper - Helper object for network-related operations
 * @returns A function that takes a Playwright Page object that is on the home page of Amazon and returns an array of OrderInfo
 */
export declare const getAllOrders: (networkHelper: NetworkHelper) => (page: Page) => Promise<OrderInfo[]>;
/**
 * Searches for a specified item on Amazon.
 *
 * @param networkHelper - Helper object for network-related operations
 * @param item - The item to search for
 * @returns A function that takes a Playwright Page object that is on the home page of Amazon and performs the search
 */
export declare const searchItem: (networkHelper: NetworkHelper, item: string) => (page: Page) => Promise<void>;
/**
/**
 * Adds the current item to the cart from the product page.
 * Note: This function may not work for subscription items like medication, food or clothing
 *
 * @param networkHelper - Helper object for network-related operations
 * @param page - Playwright Page object that should be on an Amazon product page
 */
export declare const addItemToCartOnProductPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
/**
 * Submits the checkout process on the Amazon checkout page.
 *
 * @param networkHelper - Helper object for network-related operations
 * @param page - Playwright Page object that should be on the Amazon checkout page (https://www.amazon.com/gp/buy/spc/handlers/display.html)
 * @throws Error if unable to proceed with checkout or place the order
 */
export declare const submitCheckoutOnCheckoutPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
/**
 * Navigates to the checkout page from the current page.
 *
 * @param networkHelper - Helper object for network-related operations
 * @param page - Playwright Page object that should be on any Amazon page with access to the cart
 */
export declare const navigateToCheckoutPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
/**
 * Navigates to the account page from the current page.
 *
 * @param networkHelper - Helper object for network-related operations
 * @param page - Playwright Page object that should be on any Amazon page with access to the account menu
 */
export declare const navigateToAccountPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
/**
 * Navigates to the orders page from the current page.
 *
 * @param networkHelper - Helper object for network-related operations
 * @param page - Playwright Page object that should be on the Amazon account page or any page with access to the orders link
 */
export declare const navigateToOrdersPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
declare const _default: {
    demoAddHeadphonesToCart: (networkHelper: NetworkHelper) => (page: Page) => Promise<void>;
    getAllOrders: (networkHelper: NetworkHelper) => (page: Page) => Promise<OrderInfo[]>;
    searchItem: (networkHelper: NetworkHelper, item: string) => (page: Page) => Promise<void>;
    addItemToCartOnProductPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
    submitCheckoutOnCheckoutPage: (networkHelper: NetworkHelper, page: Page) => Promise<void>;
};
export default _default;
//# sourceMappingURL=index.d.ts.map