import { EventEmitter } from 'events';
import type { BrowserContext } from 'playwright-core';
export type GeneratorOptions = {
    enabled?: boolean;
};
export type ActionsEvent = {
    actions: string[];
};
export declare class BrowserbaseCodeGenerator extends EventEmitter {
    private _context;
    private _skipVerify;
    private _enabled;
    private _generator;
    private _pageAliases;
    private _lastPopupOrdinal;
    private _lastDialogOrdinal;
    private _lastDownloadOrdinal;
    private _timers;
    private _javascriptGenerator;
    constructor(context: BrowserContext, options?: GeneratorOptions);
    static init(context: BrowserContext, options?: GeneratorOptions): Promise<BrowserbaseCodeGenerator>;
    setEnabled(enabled: boolean): void;
    install(): Promise<void>;
    private _onDialog;
    private _ensureCodegenEnabled;
    private _onPage;
    private _describeMainFrame;
    private _describeFrame;
    private _performAction;
    private _recordAction;
    private _setCommittedAfterTimeout;
    private _onFrameNavigated;
    private _onPopup;
    private _onDownload;
}
