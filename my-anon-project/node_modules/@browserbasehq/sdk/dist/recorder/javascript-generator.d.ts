import type { Language, LanguageGenerator, LanguageGeneratorOptions } from './language';
import type { ActionInContext } from './generator';
export declare class JavaScriptLanguageGenerator implements LanguageGenerator {
    id: string;
    groupName: string;
    name: string;
    highlighter: Language;
    private _isTest;
    constructor(isTest: boolean);
    generateAction(actionInContext: ActionInContext): string;
    private _generateActionCall;
    private _asLocator;
    generateHeader(options: LanguageGeneratorOptions): string;
    generateFooter(saveStorage: string | undefined): string;
    generateTestHeader(options: LanguageGeneratorOptions): string;
    generateTestFooter(saveStorage: string | undefined): string;
    generateStandaloneHeader(options: LanguageGeneratorOptions): string;
    generateStandaloneFooter(saveStorage: string | undefined): string;
}
export declare class JavaScriptFormatter {
    private _baseIndent;
    private _baseOffset;
    private _lines;
    constructor(offset?: number);
    prepend(text: string): void;
    add(text: string): void;
    newLine(): void;
    format(): string;
}
